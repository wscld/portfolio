{"version":3,"sources":["Reducers/actions.ts","Components/Header/index.tsx","Components/Item/index.tsx","windowHook.js","Services/github.ts","Components/GithubItem/index.tsx","Pages/Home/index.tsx","Containers/Home.ts","Components/FullItem/index.tsx","Pages/Product/index.tsx","Containers/Product.ts","App.tsx","Reducers/index.ts","index.tsx"],"names":["setProducts","products","type","Header","to","className","src","href","target","icon","faGithub","faMedium","faLinkedin","faEnvelope","Item","props","size","isClient","window","getSize","width","innerWidth","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","index","thumbnail","title","date","status","line","element","truncateText","containerClassName","text","description","fetchRepos","user","a","url","axios","get","response","data","Error","GithubItem","link","Home","repos","loadProducts","loadRepos","require","items","loadData","then","catch","err","faStream","map","val","key","full_name","html_url","connect","state","dispatch","setGithubRepos","FullItem","infinite","arrows","dots","images","stack","Product","product","setProduct","id","useParams","length","console","log","App","path","children","BLANK_STATE","reducer","action","Object","assign","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5ba0848.chunk.js","sourcesContent":["export const setProducts = (products: any[]) => ({\r\n    type: \"SET_PRODUCTS\",\r\n    products\r\n});\r\n\r\nexport const setGithubRepos = (repos: any[]) => ({\r\n    type: \"SET_GITHUB_REPOS\",\r\n    repos\r\n});\r\n","import React from 'react';\r\nimport './styles.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faMedium, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <Link to=\"/portfolio\">\r\n                <div className=\"header\">\r\n                    <div className=\"headshot\">\r\n                        <img src=\"https://res.cloudinary.com/dble8dnul/image/upload/v1592183016/portfolio/headshot_gsc42z.png\"></img>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"name\">Wesley Caldas</div>\r\n                        <div className=\"tagline\">Desenvolvedor Front-End | Full-Stack | Mobile</div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"social\">\r\n                <a href=\"https://github.com/wscld\" target=\"_blank\">\r\n                    <FontAwesomeIcon className=\"icon\" icon={faGithub} />\r\n                </a>\r\n                <a href=\"https://medium.com/@wscld\" target=\"_blank\">\r\n                    <FontAwesomeIcon className=\"icon\" icon={faMedium} />\r\n                </a>\r\n                <a href=\"https://linkedin.com/in/wscld\" target=\"_blank\">\r\n                    <FontAwesomeIcon className=\"icon\" icon={faLinkedin} />\r\n                </a>\r\n                <a href=\"mailto:weslcld@gmail.com\" target=\"_blank\">\r\n                    <FontAwesomeIcon className=\"icon\" icon={faEnvelope} />\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport useWindowSize from '../../windowHook';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.scss';\r\n\r\nconst Item = (props: any) => {\r\n    const size = useWindowSize();\r\n    return (\r\n        <div className=\"item\">\r\n            {props.index % 2 === 0 || (size.width !== 0 && size.width < 800) ? <div className=\"image\"><img src={props.thumbnail}></img></div> : null}\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    <div className=\"name\">{props.title}</div>\r\n                    <div className=\"date\">{props.date} - {props.status}</div>\r\n                </div>\r\n                <TextTruncate\r\n                    line={2}\r\n                    element=\"div\"\r\n                    truncateText=\"â€¦\"\r\n                    containerClassName=\"description\"\r\n                    text={props.description}\r\n                />               \r\n                <Link to={\"/portfolio/p/\"+props.index}>\r\n                    <div className=\"more\">Ler mais</div>\r\n                </Link>\r\n            </div>\r\n            {props.index % 2 !== 0 && (size.width !== 0 && size.width > 800) ? <div className=\"image\"><img src={props.thumbnail}></img></div> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n\r\n    function getSize() {\r\n        return {\r\n            width: isClient ? window.innerWidth : 0,\r\n            height: isClient ? window.innerHeight : 0\r\n        };\r\n    }\r\n\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n    useEffect(() => {\r\n        if (!isClient) {\r\n            return false;\r\n        }\r\n\r\n        function handleResize() {\r\n            setWindowSize(getSize());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRepos = async (user: string) => {\r\n    const url = \"https://api.github.com/users/\" + user + \"/repos\";\r\n    try {\r\n        const response = await axios.get(url);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw Error(err);\r\n    }\r\n\r\n}\r\n\r\nexport default {fetchRepos};","import React from 'react';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport useWindowSize from '../../windowHook';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.scss';\r\n\r\nconst GithubItem = (props: any) => {\r\n    return (\r\n        <div className=\"github-item\">\r\n            <div className=\"content\">\r\n                <a href={props.link} target=\"_blank\">\r\n                    <div className=\"title\">\r\n                        <div className=\"name\">{props.title}</div>\r\n                    </div>\r\n                </a>\r\n                <TextTruncate\r\n                    line={2}\r\n                    element=\"div\"\r\n                    truncateText=\"â€¦\"\r\n                    containerClassName=\"description\"\r\n                    text={props.description}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GithubItem;","import React, { useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStream } from '@fortawesome/free-solid-svg-icons'\r\nimport './styles.scss';\r\nimport Header from '../../Components/Header';\r\nimport Item from '../../Components/Item';\r\nimport { fetchRepos } from '../../Services/github';\r\nimport GithubItem from '../../Components/GithubItem';\r\n\r\nconst Home = ({ products, repos, loadProducts, loadRepos }: { products: any, repos: any, loadProducts: any, loadRepos: any }) => {\r\n    const loadData = () => {\r\n        var data = require('../../data.json');\r\n        loadProducts(data.items);\r\n    }\r\n\r\n    const loadReposData = () => {\r\n        fetchRepos(\"wscld\").then((data: any) => {\r\n            loadRepos(data);\r\n        }).catch((err: any) => {\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        loadReposData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"container\">\r\n                <div className=\"list-title\"><FontAwesomeIcon icon={faStream}></FontAwesomeIcon> Projetos no Github</div>\r\n                <div className=\"list\">\r\n                    {repos.map((val: any, index: number) =>\r\n                        <GithubItem key={index} title={val.full_name} link={val.html_url} description={val.description} />\r\n                    )}\r\n                </div>\r\n                <div className=\"list-title\"><FontAwesomeIcon icon={faStream}></FontAwesomeIcon> Projetos Pessoais</div>\r\n                <div className=\"list\">\r\n                    {products.map((val: any, index: number) =>\r\n                        <Item key={index} status={val.status} index={index} date={val.date} thumbnail={val.thumbnail} title={val.title} description={val.description} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import { setProducts, setGithubRepos } from \"../Reducers/actions\"\r\nimport { connect } from 'react-redux'\r\nimport Home from \"../Pages/Home\"\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    products: state.products,\r\n    repos: state.repos\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    loadProducts: (products: any[]) => dispatch(setProducts(products)),\r\n    loadRepos: (repos: any[]) => dispatch(setGithubRepos(repos))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React from 'react';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\nimport './styles.scss';\r\n\r\nconst FullItem = (props: any) => {\r\n    return (\r\n        <div className=\"full-item\">\r\n            <Carousel\r\n                infinite\r\n                arrows\r\n                dots\r\n            >\r\n                {props.images.map((val: any, index: number) => <img key={index} className=\"carousel-img\" src={val}/>)}\r\n            </Carousel>\r\n            <div className=\"content\">\r\n                <div className=\"title\">{props.title}</div>\r\n                <TextTruncate\r\n                    line={10}\r\n                    element=\"div\"\r\n                    truncateText=\"â€¦\"\r\n                    containerClassName=\"description\"\r\n                    text={props.description}\r\n                />\r\n                <div className=\"stack\">\r\n                    Stack:\r\n                    <ul>\r\n                        {props.stack.map((val:any,index:number)=><li key={index}>{val}</li>)}\r\n                    </ul>\r\n                </div>\r\n                {props.link !== \"\" ? <a target=\"_blank\" href={props.link}><div className=\"more\">Acessar</div></a> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FullItem;","import React, { useEffect, useState } from 'react';\r\nimport './styles.scss';\r\nimport Header from '../../Components/Header';\r\nimport { useParams } from 'react-router-dom';\r\nimport FullItem from '../../Components/FullItem';\r\n\r\nconst Product = ({ products, loadProducts }: { products: any, loadProducts: any }) => {\r\n    const [product, setProduct] = useState<any>({});\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (products.length == 0) {\r\n            var data = require('../../data.json');\r\n            loadProducts(data.items);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setProduct(products[id]);\r\n        console.log(products);\r\n    },[products]);\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div className=\"container\">\r\n                {product && product.images ? <FullItem link={product.link} stack={product.stack} images={product.images} title={product.title} description={product.description} /> : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product;","import { connect } from 'react-redux'\r\nimport Product from \"../Pages/Product\"\r\nimport { setProducts } from '../Reducers/actions'\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    products: state.products\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    loadProducts: (products: any[]) => dispatch(setProducts(products))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product)","import React from 'react';\nimport './App.css';\nimport Home from './Containers/Home';\nimport Product from './Containers/Product';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/portfolio/p/:id\" children={<Product />} />\n        <Route path=\"/portfolio/\" children={<Home />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","\r\ninterface IState {\r\n    products: any[],\r\n    repos:any[]\r\n}\r\n\r\n\r\nconst BLANK_STATE: IState = ({\r\n    products: [],\r\n    repos:[]\r\n});\r\n\r\nconst reducer = (state = BLANK_STATE, action: any) => {\r\n    switch (action.type) {\r\n        case \"SET_PRODUCTS\":\r\n            return Object.assign({}, state, {\r\n                products: action.products\r\n            })\r\n        case \"SET_GITHUB_REPOS\":\r\n            return Object.assign({}, state, {\r\n                repos: action.repos\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './Reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}